SELECT * FROM BSI_UC uc INNER JOIN BSI_UC_TEXT uct ON UCT.UC_UID = UC.UC_UID 
WHERE UC.CODE_TYPE = 161558 AND UCT.LANGUAGE_UID = 246
ORDER BY uc.UC_UID
;
--162106
SELECT * FROM BSI_UC uc INNER JOIN BSI_UC_TEXT uct ON UCT.UC_UID = UC.UC_UID WHERE UC.UC_UID = 161558 AND UCT.LANGUAGE_UID = 246;
SELECT * FROM BSI_UC uc WHERE UC.UC_UID = 161558 ;

--SELECT BSI_X_AUSZAHLUNGEN_NO_SEQ.NEXTVAL as v_id FROM dual; 
--SELECT last_number FROM sys.USER_SEQUENCES WHERE SEQUENCE_NAME = 'BSI_X_AUSZAHLUNGEN_NO_SEQ';
--999023578
--ALTER SEQUENCE BSI_X_AUSZAHLUNGEN_NO_SEQ INCREMENT BY -23578 MINVALUE 999000000;
--ALTER SEQUENCE BSI_X_AUSZAHLUNGEN_NO_SEQ INCREMENT BY 1 MINVALUE 999000000;
--COMMIT;


SELECT CONCAT(CONCAT(CONCAT('(', STATUS_UID), ')  '), UCT.TEXT) AS AuszahlungsStatus
FROM BSI_X_AUSZAHLUNGEN repay 
	INNER JOIN BSI_UC_TEXT uct 
	ON UCT.UC_UID = REPAY.STATUS_UID
	WHERE UCT.LANGUAGE_UID = 246
;

-- 24246808, 23679997, 19067994
SELECT CUSTOMER_NR, 
	CONCAT(CONCAT(CONCAT('(', STATUS_UID), ')  '), UCT.TEXT) AuszahlungsStatus,
	TO_CHAR(TO_DATE(EVT_CREATED), 'DD.MM.YYYY') AuszahlungEvtCreated,
	AUSZAHLUNGS_NO AuszahlungsNo,
	BELEG_NR ReceiptNo,
	INVOICE_TOTAL AuszahlungInvoiceTotal,
	PAYMENT_TOTAL AuszahlungPaymentTotal,
	INVOICE_DATE InvoiceDate,
	KOMMENTAR AuszahlungenComment,
	XML_EXPORT_DATE AuszahlungenXmlExportDate
FROM BSI_X_AUSZAHLUNGEN repay 
	INNER JOIN BSI_UC_TEXT uct 
	ON UCT.UC_UID = REPAY.STATUS_UID
	WHERE UCT.LANGUAGE_UID = 246
	GROUP BY EVT_CREATED, AUSZAHLUNGS_NO, CUSTOMER_NR, STATUS_UID, UCT.TEXT, BELEG_NR, INVOICE_DATE, INVOICE_TOTAL, PAYMENT_TOTAL, KOMMENTAR, XML_EXPORT_DATE
	ORDER BY REPAY.AUSZAHLUNGS_NO
;

SELECT CONCAT(CONCAT(CONCAT('(', STATUS_UID), ')  '), UCT.TEXT) AuszahlungsStatus,
	TO_CHAR(TO_DATE(EVT_CREATED), 'DD.MM.YYYY') AuszahlungEvtCreated,
	AUSZAHLUNGS_NO AuszahlungsNo,
	BELEG_NR ReceiptNo,
	INVOICE_TOTAL AuszahlungInvoiceTotal,
	PAYMENT_TOTAL AuszahlungPaymentTotal,
	INVOICE_DATE InvoiceDate,
	KOMMENTAR AuszahlungenComment,
	XML_EXPORT_DATE AuszahlungenXmlExportDate
FROM BSI_X_AUSZAHLUNGEN repay 
	INNER JOIN BSI_UC_TEXT uct 
	ON UCT.UC_UID = REPAY.STATUS_UID
	WHERE CUSTOMER_NR = 19061390 
	AND UCT.LANGUAGE_UID = 246
--	GROUP BY EVT_CREATED, AUSZAHLUNGS_NO, CUSTOMER_NR, STATUS_UID, UCT.TEXT, BELEG_NR, INVOICE_DATE, INVOICE_TOTAL, PAYMENT_TOTAL, KOMMENTAR, XML_EXPORT_DATE
--	ORDER BY REPAY.AUSZAHLUNGS_NO
;


SELECT REPAY.AUSZAHLUNGS_NO,
	REPAY.INVOICE_NR,
	REPAY.BELEG_NR,
	REPAY.INVOICE_TOTAL,
	REPAY.PAYMENT_TOTAL,
REPAY.INVOICE_DATE 
FROM BSI_X_AUSZAHLUNGEN repay 
	WHERE REPAY.CUSTOMER_NR = 19061870
	ORDER BY REPAY.INVOICE_NR DESC
;

SELECT * FROM BSI_X_AUSZAHLUNGEN repay 
WHERE rowid IN (
	SELECT MIN(rowid) FROM BSI_X_AUSZAHLUNGEN ipay 
--	WHERE IPAY.BELEG_NR IS NOT NULL
--	AND REPAY.BELEG_NR IS NOT NULL
	WHERE IPAY.BELEG_NR = REPAY.BELEG_NR
	AND IPAY.AUSZAHLUNGS_NO = REPAY.AUSZAHLUNGS_NO
	GROUP BY IPAY.BELEG_NR 
	HAVING count(IPAY.BELEG_NR) > 1
)
AND repay.CUSTOMER_NR = 19067994
--AND REPAY.BELEG_NR IS NULL
;

SELECT * FROM BSI_X_AUSZAHLUNGEN WHERE rowid IN 
(
	SELECT MIN(ROWID) FROM BSI_X_AUSZAHLUNGEN GROUP BY BELEG_NR, CUSTOMER_NR 
	HAVING CUSTOMER_NR IS NOT NULL 
	AND MIN(ROWID) <> MAX(ROWID)
)
AND CUSTOMER_NR = 19061870
ORDER BY AUSZAHLUNGS_NO
;

SELECT DISTINCT INVOICE_NR, BELEG_NR, CUSTOMER_NR
--, INVOICE_TOTAL, PAYMENT_TOTAL, CUSTOMER_NR 
FROM BSI_X_AUSZAHLUNGEN
--WHERE CUSTOMER_NR = 19061870
ORDER BY CUSTOMER_NR
;

COMMIT;


SELECT AUSZAHLUNGS_NO, COUNT(BELEG_NR) AS Anzahl FROM BSI_X_AUSZAHLUNGEN 
GROUP BY AUSZAHLUNGS_NO
HAVING COUNT(BELEG_NR) > 1
;

SELECT count(*) FROM BSI_X_AUSZAHLUNGEN WHERE AUSZAHLUNGS_NO IS NULL;

SELECT COUNT(DISTINCT AUSZAHLUNGS_NO) AS Anzahl FROM BSI_X_AUSZAHLUNGEN
;

SELECT DISTINCT RECEIPT_TYPE FROM BSI_X_AUSZAHLUNGEN 
WHERE RECEIPT_TYPE IS NOT NULL AND BELEG_NR IS NOT NULL;

SELECT * FROM BSI_UC WHERE CODE_TYPE = 162087;


SELECT * FROM BSI_UC uc WHERE UC.CODE_TYPE = '161558' ORDER BY UC.UC_UID;

SELECT * FROM BSI_UC_TEXT WHERE UC_UID = '161557';

SELECT uct.* FROM BSI_UC uc INNER JOIN BSI_UC_TEXT uct ON UCT.UC_UID = uc.UC_UID WHERE UC.CODE_TYPE = '161558' ORDER BY UCT.UC_UID;

SELECT last_number FROM sys.USER_SEQUENCES WHERE SEQUENCE_NAME = 'BSI_X_AUSZAHLUNGEN_NO_SEQ';

SELECT BSI_X_AUSZAHLUNGEN_NO_SEQ.NEXTVAL as v_id FROM dual;

SELECT DISTINCT STATUS_UID, BELEG_NR, INVOICE_NR FROM BSI_X_AUSZAHLUNGEN;

SELECT AUSZAHLUNGS_NR, AUSZAHLUNGS_NO FROM BSI_X_AUSZAHLUNGEN  WHERE JOIN_NO = '1006475669' 
--AND AUSZAHLUNGS_NO = ''
AND STATUS_UID NOT IN ('161563', '161561')
;
SELECT AUSZAHLUNGS_NR FROM BSI_X_AUSZAHLUNGEN  WHERE JOIN_NO = '1006475669'  AND AUSZAHLUNGS_NO = '999019222' AND STATUS_UID NOT IN ('161563', '161561');

UPDATE BSI_X_AUSZAHLUNGEN SET STATUS_UID = '161563' WHERE AUSZAHLUNGS_NO ='999019943';
SELECT AUSZAHLUNGS_NR FROM BSI_X_AUSZAHLUNGEN WHERE AUSZAHLUNGS_NO = '' AND STATUS_UID != '161563'; 

SELECT REPAY.AUSZAHLUNGS_NO, REPAY.STATUS_UID, UCT.TEXT, CMP.COMPANY_NO, BI.BANKINFORMATION_NR, BI.X_POSTKONTO, IBAN.IBAN_NO 
FROM BSI_COMPANY cmp 
	INNER JOIN BSI_X_BANK_INFORMATION bi 
		INNER JOIN BSI_X_IBAN iban 
		ON IBAN.BANKINFORMATION_NR = BI.BANKINFORMATION_NR
		INNER JOIN BSI_X_AUSZAHLUNGEN repay 
			INNER JOIN BSI_UC_TEXT uct 
			ON UCT.UC_UID = REPAY.STATUS_UID
		ON REPAY.CUSTOMER_NR = BI.COMPANY_NR
	ON BI.COMPANY_NR = CMP.COMPANY_NR
WHERE CMP.COMPANY_NO = '1006475669'
;

SELECT * FROM BSI_X_AUSZAHLUNGEN WHERE AUSZAHLUNGS_NO = '999019610';

DECLARE
	repay_cursor sys_refcursor; 
	auszahlungsNr int;
	idVal int;
BEGIN
	idVal := 0;

	OPEN repay_cursor FOR 
	SELECT AUSZAHLUNGS_NR FROM BSI_X_AUSZAHLUNGEN WHERE STATUS_UID = '161559' ORDER BY AUSZAHLUNGS_NR;

	LOOP
		FETCH repay_cursor INTO auszahlungsNr;
		EXIT WHEN repay_cursor%notfound;
	
		SELECT BSI_X_AUSZAHLUNGEN_NO_SEQ.NEXTVAL into idVal FROM dual;
	
		UPDATE BSI_X_AUSZAHLUNGEN SET AUSZAHLUNGS_NO = idVal WHERE AUSZAHLUNGS_NR = auszahlungsNr;
	END LOOP;
	CLOSE repay_cursor;
	COMMIT;
END;

SELECT DISTINCT CUSTOMER_NR FROM BSICRM.BSI_X_AUSZAHLUNGEN WHERE STATUS_UID = '161559' ORDER BY CUSTOMER_NR;
SELECT DISTINCT CUSTOMER_NR 
	FROM BSICRM.BSI_X_AUSZAHLUNGEN data1 
	INNER JOIN (SELECT DISTINCT CUSTOMER_NR FROM BSICRM.BSI_X_AUSZAHLUNGEN WHERE STATUS_UID = '161559' AND AUSZAHLUNGS_NO IS NULL)	data2
		ON data2.CUSTOMER_NR = data1.CUSTOMER_NR
WHERE STATUS_UID = '161559' 
AND AUSZAHLUNGS_NO IS NOT NULL;

--
-- Update fuer Customer_Nr = Company_Nr (bzw. join_nr)
--
MERGE INTO BSI_X_AUSZAHLUNGEN repay 
         USING 
         (
            SELECT ejj.EXT_JOIN_NR, EJJ.JOIN_NR 
            FROM BSI_X_EXT_JOIN_JOIN ejj 
        ) tb 
            ON (tb.EXT_JOIN_NR = REPAY.EXT_JOIN_NR)
         WHEN MATCHED THEN UPDATE 
             SET REPAY.CUSTOMER_NR = tb.join_nr
             WHERE REPAY.AUSZAHLUNGS_NO IS NULL
             AND REPAY.STATUS_UID = '161559';

SELECT DISTINCT AUSZAHLUNGS_NO FROM BSI_X_AUSZAHLUNGEN
WHERE CUSTOMER_NR = 19061494
AND STATUS_UID = '161559'
;

SELECT count(*) AS Anzahl FROM S2_ABACUS_AUSZAHLUNGEN_IN;

DELETE FROM BSI_X_AUSZAHLUNGEN;
COMMIT;
DELETE FROM INTF_LOCK;


-- 8990155
--ALTER SEQUENCE BSI_X_AUSZAHLUNGEN_NO_SEQ INCREMENT BY 1 MINVALUE 999000000;
--COMMIT;

SELECT AUSZAHLUNGS_NR FROM BSI_X_AUSZAHLUNGEN WHERE STATUS_UID = '161559' ORDER BY AUSZAHLUNGS_NR;
SELECT AUSZAHLUNGS_NR FROM BSI_X_AUSZAHLUNGEN WHERE AUSZAHLUNGS_NO IS NOT NULL;
SELECT AUSZAHLUNGS_NR, AUSZAHLUNGS_NO, CUSTOMER_NR FROM BSI_X_AUSZAHLUNGEN ORDER BY AUSZAHLUNGS_NO;

MERGE INTO BSI_X_AUSZAHLUNGEN repay 
USING 
(
	SELECT SAVED.CUSTOMER_NR, SAVED.AUSZAHLUNGS_NO
	FROM BSI_X_AUSZAHLUNGEN saved 
	WHERE SAVED.AUSZAHLUNGS_NO IS NOT NULL
	AND SAVED.STATUS_UID = '161559'
) tb 
	ON (tb.CUSTOMER_NR = REPAY.CUSTOMER_NR) 
WHEN MATCHED THEN UPDATE 
	SET REPAY.AUSZAHLUNGS_NO = tb.AUSZAHLUNGS_NO 
	WHERE REPAY.AUSZAHLUNGS_NO IS NULL 
	AND REPAY.STATUS_UID = '161559'
;


MERGE INTO BSI_X_AUSZAHLUNGEN repay 
USING 
(
	SELECT SAVED.RECNUM_NR, SAVED.RECNUM
	FROM S2_ABACUS_AUSZAHLUNGEN_IN saved 
) tb 
	ON (tb.RECNUM_NR = REPAY.AUSZAHLUNGS_NR) 
WHEN MATCHED THEN UPDATE 
	SET REPAY.INVOICE_NR = tb.RECNUM 
;

SELECT * FROM BSI_JOB ORDER BY SERIES_PATTERN_NR;
